{
  "GLM API Call": {
    "prefix": "glm-api",
    "body": [
      "const response = await zaiClient.chatCompletion(",
      "  [",
      "    { role: 'system', content: '$1' },",
      "    { role: 'user', content: '$2' }",
      "  ],",
      "  { temperature: 0.7, maxTokens: 2048 }",
      ");",
      "$3"
    ],
    "description": "GLM-4.6 API call template"
  },
  "GLM Chat Hook": {
    "prefix": "glm-hook",
    "body": [
      "const { messages, isLoading, sendMessage } = useGLMChat();",
      "",
      "const handleSubmit = async (content: string) => {",
      "  try {",
      "    await sendMessage(content, {",
      "      temperature: 0.7,",
      "      maxTokens: 2048,",
      "    });",
      "  } catch (error) {",
      "    console.error('Failed to send message:', error);",
      "  }",
      "};",
      "$1"
    ],
    "description": "GLM-4.6 chat hook template"
  },
  "GLM Component": {
    "prefix": "glm-component",
    "body": [
      "'use client';",
      "",
      "import { useState } from 'react';",
      "import { Button } from '@/components/ui/button';",
      "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';",
      "",
      "interface ${1:ComponentName}Props {",
      "  // Define props here",
      "}",
      "",
      "export function ${1:ComponentName}({",
      "  ${2:// props}",
      "}: ${1:ComponentName}Props) {",
      "  const [isLoading, setIsLoading] = useState(false);",
      "  ",
      "  return (",
      "    <Card>",
      "      <CardHeader>",
      "        <CardTitle>${3:Component Title}</CardTitle>",
      "      </CardHeader>",
      "      <CardContent>",
      "        {$4:/* Component content */}",
      "      </CardContent>",
      "    </Card>",
      "  );",
      "}"
    ],
    "description": "GLM-4.6 component template with shadcn/ui"
  },
  "GLM API Route": {
    "prefix": "glm-api-route",
    "body": [
      "import { NextRequest, NextResponse } from 'next/server';",
      "import { zaiClient } from '@/lib/zai-client';",
      "",
      "export async function POST(request: NextRequest) {",
      "  try {",
      "    const { ${1:param1}, ${2:param2} } = await request.json();",
      "    ",
      "    const response = await zaiClient.chatCompletion([",
      "      {",
      "        role: 'system',",
      "        content: '${3:System prompt}'",
      "      },",
      "      {",
      "        role: 'user',",
      "        content: `${4:User prompt}`",
      "      }",
      "    ], {",
      "      temperature: 0.7,",
      "      maxTokens: 2048,",
      "    });",
      "    ",
      "    return NextResponse.json({",
      "      success: true,",
      "      data: {",
      "        content: response.content,",
      "        usage: response.usage,",
      "      }",
      "    });",
      "  } catch (error) {",
      "    console.error('API Error:', error);",
      "    return NextResponse.json(",
      "      { error: 'Failed to process request' },",
      "      { status: 500 }",
      "    );",
      "  }",
      "}"
    ],
    "description": "GLM-4.6 API route template"
  },
  "GLM Sync Command": {
    "prefix": "glm-sync",
    "body": [
      "// Sync with GLM-4.6",
      "const files = await glmSync.generateComponent({",
      "  componentName: '${1:ComponentName}',",
      "  componentDesc: '${2:Component description}',",
      "  componentType: '${3:component}'",
      "});",
      "",
      "await glmSync.syncFiles(files);"
    ],
    "description": "GLM-4.6 sync command template"
  }
}